{"version":3,"sources":["components/Search.jsx","components/Tabs.jsx","components/Description.jsx","components/Address.jsx","components/Studio.jsx","App.js","serviceWorker.js","index.js"],"names":["Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","items","nextProps","setState","update","_this2","react_default","a","createElement","className","Autocomplete_default","shouldItemRender","item","name","toLowerCase","indexOf","getItemValue","wrapperProps","renderItem","highlighted","key","style","backgroundColor","color","src","concat","replace","alt","onChange","e","target","onSelect","updateSelected","Component","Tabs","active","onClick","event","updateTab","Description","cover","contact","city","description","Address","phone","logo","address","zip_code","Studio","setActive","bind","assertThisInitialized","desigerComponents","studio","components_Description","components_Address","components_Tabs","App","studios","getSelectedStudio","designers","Math","floor","random","length","getLogo","getCoverImage","selected","filter","getRandomStudio","components_Search","components_Studio","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b89f55d3.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Autocomplete from 'react-autocomplete';\n\nclass Search extends Component {\n\n    constructor (props) {\n        super(props)\n        this.state = {\n          value: '',\n          items: []\n        }\n      }\n    componentWillReceiveProps(nextProps){\n        this.setState({\n            items: nextProps.items\n        })\n    }\n\n    updateSelected(value) {\n        this.setState({ value })\n        this.props.update(value)\n    }\n\n    render(){\n        return (\n            <nav className=\"search\">\n                <div className=\"input-glass\">\n                    <span className=\"fa fa-search\"></span>\n        <Autocomplete\n                items={this.state.items}\n                shouldItemRender={(item, value) => item.name.toLowerCase().indexOf(value.toLowerCase()) > -1}\n                getItemValue={item => item.name}\n                wrapperProps={{className: 'autocomplete-wrapper'}}\n                renderItem={(item, highlighted) =>\n                    <div className=\"search-result\" key={item.name}\n                        style={{ \n                            backgroundColor: highlighted ? 'rgba(185,9,11,.8)' : 'transparent',\n                            color: highlighted ? '#ffffff' : '#333333'}}\n                    >\n                    <div className=\"thumbnail-container\">\n                    <img src={`images/${item.name.replace(/\\s+/g, '-').toLowerCase()}-logo.jpg`} alt=\"\"/>\n                    </div>\n                        <div className=\"item-name\"><p>{item.name}</p></div>\n                        \n                    </div>   \n                }\n                value={this.state.value}\n                onChange={e => this.setState({ value: e.target.value })}\n                onSelect={value => this.updateSelected(value)}\n            />\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default Search;","import React, {Component} from 'react';\n\nclass Tabs extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            active : \"desc\"\n        }\n    }\n    updateTab(active){\n        this.setState({\n            active: active\n        })\n        this.props.update(active)\n    }\n\n    render() {\n        return (\n            <header className=\"tab-navigation-bar\">\n                <nav className=\"tab-navigation\">\n                    <button \n                        className={`button designer-name ${this.state.active === \"desc\" ? \"active\" : \"\"}`}\n                        onClick={event => this.updateTab(\"desc\")}>\n                        {this.props.name}\n                    </button>\n                    <button className={`button ${this.state.active === \"contact\" ? \"active\" : \"\"}`}\n                    onClick={event => this.updateTab(\"contact\")}>\n                        Contact\n                    </button>\n                </nav>\n            </header>\n        )\n    }\n}\n\nexport default Tabs ","import React from 'react';\n\nconst Description = (props) => {\n\n    return (\n    <article className=\"intro\">\n        <div className=\"card\">\n            <div className=\"preview\">\n                <img src={props.cover} alt={props.name} />\n            </div>\n        <div className=\"description-container\">\n            <p className=\"location\">USA - {props.contact.state} - {props.contact.city}</p>\n            <p className=\"description\">{props.description}</p>\n            <p className=\"learn-more\">Learn More about <span className=\"designer-name\">{props.name}</span></p>\n        </div>\n        </div>\n    </article>\n   \n    )\n}\n\nexport default Description","import React from 'react';\n\n\nconst Address = (props) => { \n    \n    const phone = `${props.contact.phone.replace(/(\\d{3})(\\d{3})(\\d{4})/, '($1) $2-$3')}`;\n\n    return (\n        <article className=\"contact\">\n         <div className=\"card\">\n        <div className=\"logo\">\n          <img src={props.logo} alt={props.contact.name} />\n        </div>\n        <div className=\"display-addresss\">\n            <p className=\"breadcrumbs\">USA - {props.contact.state} - {props.contact.city}</p>\n          <address className=\"address\">\n            <p>{props.contact.address} <br /> {props.contact.city},{props.contact.state} <br /> {props.contact.zip_code}</p>\n            <p className=\"phone\">{phone}</p>\n          </address>\n        </div>\n        </div>\n      </article>\n\n    )\n\n}\n\nexport default Address","import React, {Component} from 'react';\nimport Tabs from './Tabs';\nimport Description from './Description';\nimport Address from './Address';\n\nclass Studio extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            active: \"desc\"\n        }\n        this.setActive = this.setActive.bind(this);\n      }\n\n    setActive(active){\n        this.setState({\n            active: active\n        })\n    }\n\n    render(){\n\n        let desigerComponents = \"\"\n\n        if (this.props.studio.contact && this.state.active === \"desc\"){\n            desigerComponents =  <Description \n                                    name={this.props.studio.name} \n                                    description={this.props.studio.description}\n                                    cover = {this.props.cover}\n                                    contact={this.props.studio.contact}\n                                />\n        } else if (this.props.studio.contact && this.state.active !== \"desc\"){\n            desigerComponents = <Address logo={this.props.logo} contact={this.props.studio.contact}/>\n        } else {\n            desigerComponents = <p>Loading</p>\n        }\n\n        return <section className=\"studio\">\n            <Tabs name={this.props.studio.name} update={this.setActive}/>\n            {desigerComponents}\n          </section>;\n    }\n}\n\nexport default Studio;","import React, { Component } from 'react';\nimport Search from './components/Search';\nimport Studio from './components/Studio';\nimport designers from './data/data.json'\n\nimport './scss/App.scss';\n\nconst imagePath = \"images/\"\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state ={\n      studio : {},\n      logo : {},\n      cover : {},\n      studios: []\n    }\n\n    this.getSelectedStudio = this.getSelectedStudio.bind(this);\n  }\n\n  getRandomStudio(){\n    const studio = designers.designers[Math.floor(Math.random()*designers.designers.length)]\n    this.setState({\n      logo : this.getLogo(studio),\n      cover : this.getCoverImage(studio)\n    })\n    \n    return studio\n  }\n\n  getSelectedStudio(studio){\n    const selected = this.state.studios.filter(item => item.name === studio);\n    \n      this.setState({\n        logo : this.getLogo(selected[0]),\n        cover : this.getCoverImage(selected[0]),\n        studio : selected[0]\n      })\n  }\n\n  getCoverImage(studio){\n    return `${imagePath}${studio.name.replace(/\\s+/g, '-').toLowerCase()}-cover-image.jpg`;\n  }\n\n  getLogo(studio){\n    return `${imagePath}${studio.name.replace(/\\s+/g, '-').toLowerCase()}-logo.jpg`;\n  }\n\n  componentDidMount() {\n    this.setState({\n      studio : this.getRandomStudio(),\n      studios: designers.designers\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Search items={this.state.studios} update={this.getSelectedStudio}/>\n        <Studio studio={this.state.studio} logo={this.state.logo} cover={this.state.cover}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}